[
  {
    "id": "TC001",
    "title": "User Signup with Email Verification",
    "description": "Verify that a new user can sign up successfully, receive an email verification, and access protected routes only after verification.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to signup page"
      },
      {
        "type": "action",
        "description": "Fill in valid signup information (email, password)"
      },
      {
        "type": "action",
        "description": "Submit signup form"
      },
      {
        "type": "assertion",
        "description": "Check that user receives email verification prompt"
      },
      {
        "type": "action",
        "description": "Simulate clicking email verification link"
      },
      {
        "type": "assertion",
        "description": "Verify user email is marked as verified"
      },
      {
        "type": "action",
        "description": "Attempt to access a protected dashboard route"
      },
      {
        "type": "assertion",
        "description": "Confirm access is granted"
      }
    ]
  },
  {
    "id": "TC002",
    "title": "Login with Correct Credentials",
    "description": "Verify that the user can log in successfully with valid credentials and access protected application areas.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to login page"
      },
      {
        "type": "action",
        "description": "Input valid email and password"
      },
      {
        "type": "action",
        "description": "Click login button"
      },
      {
        "type": "assertion",
        "description": "Confirm login success and redirect to dashboard"
      }
    ]
  },
  {
    "id": "TC003",
    "title": "Login Failure with Incorrect Password",
    "description": "Verify that login fails when an incorrect password is provided and appropriate error message is shown.",
    "category": "error handling",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to login page"
      },
      {
        "type": "action",
        "description": "Input valid email and incorrect password"
      },
      {
        "type": "action",
        "description": "Click login button"
      },
      {
        "type": "assertion",
        "description": "Confirm error message indicating invalid credentials is displayed"
      }
    ]
  },
  {
    "id": "TC004",
    "title": "Password Reset Workflow",
    "description": "Verify the password reset flow, including email request, email receipt, and password change completion.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to forgot password page"
      },
      {
        "type": "action",
        "description": "Submit registered email address"
      },
      {
        "type": "assertion",
        "description": "Confirm password reset email is sent"
      },
      {
        "type": "action",
        "description": "Simulate click on password reset link from email"
      },
      {
        "type": "action",
        "description": "Enter and confirm new password"
      },
      {
        "type": "action",
        "description": "Submit new password"
      },
      {
        "type": "assertion",
        "description": "Confirm password reset success and login with new password is possible"
      }
    ]
  },
  {
    "id": "TC005",
    "title": "Voice AI Assistant Inbound Call Handling",
    "description": "Verify the Voice AI Assistant answers calls 24/7, performs real-time transcription, supports voice selection, and handles errors gracefully.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Simulate incoming call to AI Voice Assistant"
      },
      {
        "type": "assertion",
        "description": "Confirm call is answered by AI assistant (Marcy)"
      },
      {
        "type": "assertion",
        "description": "Verify real-time transcription is generated and displayed"
      },
      {
        "type": "action",
        "description": "Change AI voice selection during call"
      },
      {
        "type": "assertion",
        "description": "Confirm voice changes successfully without dropping call"
      },
      {
        "type": "action",
        "description": "Simulate call with network interruption or error"
      },
      {
        "type": "assertion",
        "description": "Verify graceful error handling and user notification"
      },
      {
        "type": "assertion",
        "description": "Check call summary and call logs are updated accordingly"
      }
    ]
  },
  {
    "id": "TC006",
    "title": "AI Chat Widget Interaction with Emotion Detection",
    "description": "Validate the AI Chat Widget provides contextual responses, detects user emotions, and tracks conversation quality accurately.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Open AI Chat Widget on landing page"
      },
      {
        "type": "action",
        "description": "Send a typical customer inquiry"
      },
      {
        "type": "assertion",
        "description": "Confirm AI provides relevant contextual response quickly"
      },
      {
        "type": "action",
        "description": "Send messages with varying emotional tones (e.g. frustration, happiness)"
      },
      {
        "type": "assertion",
        "description": "Verify emotion detection tags update in conversation metadata"
      },
      {
        "type": "assertion",
        "description": "Confirm conversation quality tracking metrics are updated correctly"
      }
    ]
  },
  {
    "id": "TC007",
    "title": "Lead Management System Captures and Qualifies Leads",
    "description": "Confirm that lead information auto-extracted from calls and chats is stored properly with accurate qualification status updates.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Simulate inbound call or chat capturing lead details"
      },
      {
        "type": "assertion",
        "description": "Verify contact information (name, phone, email) auto-extracted and stored in lead database"
      },
      {
        "type": "assertion",
        "description": "Check lead qualification status is assigned correctly based on conversation content"
      },
      {
        "type": "action",
        "description": "Update lead status manually via dashboard"
      },
      {
        "type": "assertion",
        "description": "Confirm lead status change is saved and reflected in UI"
      }
    ]
  },
  {
    "id": "TC008",
    "title": "Dashboard Displays Accurate Analytics and Call Logs",
    "description": "Verify the Dashboard correctly renders stats cards, charts, call logs, lead data, and payment history reflecting the backend data.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Login and navigate to Dashboard"
      },
      {
        "type": "assertion",
        "description": "Confirm statistics cards show correct numbers for calls, leads, payments"
      },
      {
        "type": "assertion",
        "description": "Verify charts display data trends accurately"
      },
      {
        "type": "action",
        "description": "Open call logs tab"
      },
      {
        "type": "assertion",
        "description": "Ensure call logs reflect recent calls with accurate details"
      },
      {
        "type": "action",
        "description": "Open leads tab and payments tab"
      },
      {
        "type": "assertion",
        "description": "Validate leads and payments data corresponds to backend records"
      }
    ]
  },
  {
    "id": "TC009",
    "title": "Subscription Payment Processing via Flutterwave",
    "description": "Verify subscription management, payment links generation, secure billing workflows and proper response handling with Flutterwave integration.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to Payment and Subscription Management page"
      },
      {
        "type": "action",
        "description": "Select a subscription plan"
      },
      {
        "type": "action",
        "description": "Initiate payment checkout via Flutterwave"
      },
      {
        "type": "assertion",
        "description": "Confirm payment link is generated and user is redirected appropriately"
      },
      {
        "type": "action",
        "description": "Complete payment with valid card details"
      },
      {
        "type": "assertion",
        "description": "Verify payment success status reflected in payment history and subscription active status"
      },
      {
        "type": "action",
        "description": "Simulate payment failure (e.g., declined card)"
      },
      {
        "type": "assertion",
        "description": "Confirm appropriate error messages are shown and payment is not processed"
      }
    ]
  },
  {
    "id": "TC010",
    "title": "Agent Setup and AI Assistant Configuration",
    "description": "Verify users can configure AI assistant voice models, parameters, custom instructions, and perform test calls reflecting applied settings.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to Agent Setup page"
      },
      {
        "type": "action",
        "description": "Select different voice models and voices"
      },
      {
        "type": "action",
        "description": "Update custom instructions for AI assistant"
      },
      {
        "type": "action",
        "description": "Save configuration changes"
      },
      {
        "type": "action",
        "description": "Perform a test call via test call feature"
      },
      {
        "type": "assertion",
        "description": "Confirm that the test call behaves according to new settings with accurate voice and behavior"
      }
    ]
  },
  {
    "id": "TC011",
    "title": "Telegram Notification for Real-time Lead Alerts",
    "description": "Verify that new leads trigger real-time notifications sent to users via the integrated Telegram bot with correct lead details.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Simulate new lead capture from call or chat"
      },
      {
        "type": "assertion",
        "description": "Check Telegram bot sends notification to linked user account"
      },
      {
        "type": "assertion",
        "description": "Verify notification message contains accurate lead information"
      }
    ]
  },
  {
    "id": "TC012",
    "title": "Role-Based Access Control and Row Level Security Enforcement",
    "description": "Ensure that user roles restrict access to protected routes and data in compliance with the security policies including RLS and JWT authentication.",
    "category": "security",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Login as user with standard role"
      },
      {
        "type": "action",
        "description": "Attempt access to admin-only dashboard sections"
      },
      {
        "type": "assertion",
        "description": "Confirm access is denied with appropriate error or redirect"
      },
      {
        "type": "action",
        "description": "Login as user with admin role"
      },
      {
        "type": "assertion",
        "description": "Verify admin-only routes and data are accessible"
      },
      {
        "type": "action",
        "description": "Attempt API calls with invalid or expired JWT tokens"
      },
      {
        "type": "assertion",
        "description": "Verify requests are rejected and appropriate errors returned"
      }
    ]
  },
  {
    "id": "TC013",
    "title": "Error Boundary Component Handling UI Errors Gracefully",
    "description": "Verify that when JavaScript errors occur in the UI components, the error boundary catches them and displays user-friendly error messages without crashing.",
    "category": "error handling",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Simulate a JavaScript error in a child component"
      },
      {
        "type": "assertion",
        "description": "Confirm that the error boundary displays a friendly fallback UI"
      },
      {
        "type": "assertion",
        "description": "Verify the application remains functional for other components"
      }
    ]
  },
  {
    "id": "TC014",
    "title": "Landing Page Renders Correctly and Responsive",
    "description": "Check all sections of the premium marketing landing page render properly and adapt to different screen sizes.",
    "category": "ui",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to landing page"
      },
      {
        "type": "assertion",
        "description": "Confirm hero, features, testimonials, pricing, FAQ, and CTA components are rendered"
      },
      {
        "type": "action",
        "description": "Resize viewport to mobile, tablet, and desktop dimensions"
      },
      {
        "type": "assertion",
        "description": "Verify all layout and UI elements adjust correctly without overflow or clipping"
      }
    ]
  },
  {
    "id": "TC015",
    "title": "Design System Consistency Across UI Components",
    "description": "Ensure typography, color palette, and premium shadows are applied consistently in accordance with the design system guidelines across all pages.",
    "category": "ui",
    "priority": "Low",
    "steps": [
      {
        "type": "action",
        "description": "Browse through different pages and UI components"
      },
      {
        "type": "assertion",
        "description": "Verify Playfair Display used for headings and Inter for body text"
      },
      {
        "type": "assertion",
        "description": "Confirm use of Navy, Gold, and Emerald colors where appropriate"
      },
      {
        "type": "assertion",
        "description": "Check application of premium shadow styles on cards and interactive elements"
      }
    ]
  }
]
