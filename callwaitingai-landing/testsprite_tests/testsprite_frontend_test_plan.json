[
  {
    "id": "TC001",
    "title": "User Signup with Email Verification",
    "description": "Verify that a user can successfully sign up, receive a verification email, and confirm their email address to activate their account.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to signup page"
      },
      {
        "type": "action",
        "description": "Enter valid email and password"
      },
      {
        "type": "action",
        "description": "Submit signup form"
      },
      {
        "type": "assertion",
        "description": "Receive confirmation message that verification email is sent"
      },
      {
        "type": "action",
        "description": "Click verification link in email"
      },
      {
        "type": "assertion",
        "description": "Confirm that email is verified and account is activated"
      }
    ]
  },
  {
    "id": "TC002",
    "title": "Signup with Existing Email",
    "description": "Attempt to sign up using an email already registered to check for proper error handling.",
    "category": "error handling",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to signup page"
      },
      {
        "type": "action",
        "description": "Enter an email already in use and valid password"
      },
      {
        "type": "action",
        "description": "Submit signup form"
      },
      {
        "type": "assertion",
        "description": "Display error message indicating email is already registered"
      }
    ]
  },
  {
    "id": "TC003",
    "title": "User Login Success",
    "description": "Check that a user with a verified email can log in with correct credentials.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to login page"
      },
      {
        "type": "action",
        "description": "Enter valid registered email and correct password"
      },
      {
        "type": "action",
        "description": "Click login button"
      },
      {
        "type": "assertion",
        "description": "Successfully log in and redirect to dashboard"
      }
    ]
  },
  {
    "id": "TC004",
    "title": "User Login Failure with Incorrect Password",
    "description": "Verify that login fails and appropriate error is shown when password is incorrect.",
    "category": "error handling",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to login page"
      },
      {
        "type": "action",
        "description": "Enter valid registered email and incorrect password"
      },
      {
        "type": "action",
        "description": "Click login button"
      },
      {
        "type": "assertion",
        "description": "Display error message indicating incorrect credentials"
      }
    ]
  },
  {
    "id": "TC005",
    "title": "Password Reset Flow",
    "description": "Ensure users can request a password reset email and complete password reset successfully.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to password reset page"
      },
      {
        "type": "action",
        "description": "Enter registered email address"
      },
      {
        "type": "action",
        "description": "Submit password reset request"
      },
      {
        "type": "assertion",
        "description": "Receive password reset email with reset link"
      },
      {
        "type": "action",
        "description": "Click reset link and enter new password"
      },
      {
        "type": "assertion",
        "description": "Password is successfully updated and user can log in with new password"
      }
    ]
  },
  {
    "id": "TC006",
    "title": "AI Agent Configuration Save and Persistence",
    "description": "Validate the AI agent configuration form saves successfully with system prompt persistence and no errors.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to AI Agent configuration page"
      },
      {
        "type": "action",
        "description": "Enter valid business name"
      },
      {
        "type": "action",
        "description": "Input custom system prompt"
      },
      {
        "type": "action",
        "description": "Select voice options"
      },
      {
        "type": "action",
        "description": "Upload valid knowledge base document"
      },
      {
        "type": "action",
        "description": "Save configuration"
      },
      {
        "type": "assertion",
        "description": "Confirm configuration saves without errors and fields retain values after reload"
      }
    ]
  },
  {
    "id": "TC007",
    "title": "Agent Configuration Validation for Empty Business Name",
    "description": "Ensure that an empty business name triggers input validation error with friendly message.",
    "category": "error handling",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Open AI agent configuration page"
      },
      {
        "type": "action",
        "description": "Clear business name field"
      },
      {
        "type": "action",
        "description": "Attempt to save configuration"
      },
      {
        "type": "assertion",
        "description": "Display validation error for empty business name"
      }
    ]
  },
  {
    "id": "TC008",
    "title": "Agent Configuration Validation for Overly Long System Prompt",
    "description": "Verify that system prompts exceeding 10,000 characters are rejected with appropriate error message.",
    "category": "error handling",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Open agent configuration page"
      },
      {
        "type": "action",
        "description": "Enter system prompt longer than 10,000 characters"
      },
      {
        "type": "action",
        "description": "Attempt to save configuration"
      },
      {
        "type": "assertion",
        "description": "Present user-friendly error message preventing save"
      }
    ]
  },
  {
    "id": "TC009",
    "title": "Knowledge Base File Upload with Auto-Save",
    "description": "Test successful knowledge base file upload including auto-save and validation.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to knowledge base upload section"
      },
      {
        "type": "action",
        "description": "Upload valid knowledge base file smaller than 50MB"
      },
      {
        "type": "assertion",
        "description": "File uploads successfully with auto-save triggered and no errors"
      },
      {
        "type": "action",
        "description": "Reload page and verify uploaded file persists"
      }
    ]
  },
  {
    "id": "TC010",
    "title": "File Upload Validation for Large Files",
    "description": "Ensure files larger than 50MB are rejected with friendly error message during knowledge base upload.",
    "category": "error handling",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Select file greater than 50MB for upload"
      },
      {
        "type": "action",
        "description": "Attempt to upload file"
      },
      {
        "type": "assertion",
        "description": "User shown error message rejecting large file upload"
      }
    ]
  },
  {
    "id": "TC011",
    "title": "Voice Call Testing for Free Tier using Vapi.ai",
    "description": "Validate that free tier users can initiate voice call testing using Vapi default voice and receive expected responses.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Log in as a user on free subscription tier"
      },
      {
        "type": "action",
        "description": "Navigate to Voice Call Tester"
      },
      {
        "type": "action",
        "description": "Initiate voice call test using default free tier voice"
      },
      {
        "type": "assertion",
        "description": "Call connects and voice output is generated by Vapi.ai"
      }
    ]
  },
  {
    "id": "TC012",
    "title": "Voice Call Testing for Paid Tier using Minimax TTS",
    "description": "Verify that paid tier users use Minimax TTS for advanced voice call features during call testing.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Log in as user with professional or pro subscription tier"
      },
      {
        "type": "action",
        "description": "Navigate to Voice Call Tester"
      },
      {
        "type": "action",
        "description": "Initiate voice call test using Minimax TTS voice"
      },
      {
        "type": "assertion",
        "description": "Confirm call is established with Minimax TTS generated voice output"
      }
    ]
  },
  {
    "id": "TC013",
    "title": "Vapi Webhook Call Log Integration",
    "description": "Test that voice call completion triggers webhook which logs call events properly into Supabase database.",
    "category": "integration",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Perform a voice call completion using Vapi"
      },
      {
        "type": "assertion",
        "description": "Verify webhook receives event and call log entry is created in Supabase"
      },
      {
        "type": "assertion",
        "description": "Call log data is accurate and visible in calls dashboard"
      }
    ]
  },
  {
    "id": "TC014",
    "title": "Rate Limiting Enforcement on API Endpoint",
    "description": "Verify that API endpoints enforce rate limiting at 100 calls per assistant per hour, returning HTTP 429 on excess requests.",
    "category": "error handling",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Simulate over 100 API requests for voice calls within one hour from same assistant"
      },
      {
        "type": "assertion",
        "description": "After 100 requests, API starts returning HTTP 429 Too Many Requests"
      },
      {
        "type": "assertion",
        "description": "Further requests remain blocked until rate limit resets"
      }
    ]
  },
  {
    "id": "TC015",
    "title": "Health Check Endpoint Returns HTTP 200 When Healthy",
    "description": "Confirm the health check endpoint responds with HTTP 200 status and correct payload when system and database are operational.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Send request to health check endpoint during normal operation"
      },
      {
        "type": "assertion",
        "description": "Receive HTTP 200 status with appropriate health response data"
      }
    ]
  },
  {
    "id": "TC016",
    "title": "Health Check Endpoint Returns HTTP 503 When Database Unreachable",
    "description": "Ensure health check endpoint returns HTTP 503 status when the Supabase database is unreachable.",
    "category": "error handling",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Simulate database downtime/unreachable state"
      },
      {
        "type": "action",
        "description": "Send request to health check endpoint"
      },
      {
        "type": "assertion",
        "description": "Health check endpoint returns HTTP 503 status with error message"
      }
    ]
  },
  {
    "id": "TC017",
    "title": "Real-Time Call Logging in Dashboard",
    "description": "Verify that calls completed are immediately reflected in calls dashboard analytics and call history.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Complete voice call session"
      },
      {
        "type": "assertion",
        "description": "Confirm call appears in calls history list without delay"
      },
      {
        "type": "assertion",
        "description": "Call analytics update to include recent call data"
      }
    ]
  },
  {
    "id": "TC018",
    "title": "Lead Capture and Management from Calls and Chats",
    "description": "Validate that leads generated from voice and chat interactions are captured and manageable in the leads dashboard.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Perform call or chat session with lead capture enabled"
      },
      {
        "type": "assertion",
        "description": "Lead is added to leads dashboard with accurate details"
      },
      {
        "type": "action",
        "description": "Edit lead information in leads management"
      },
      {
        "type": "assertion",
        "description": "Changes are saved and reflected immediately"
      }
    ]
  },
  {
    "id": "TC019",
    "title": "Subscription Tier Detection and Feature Access Control",
    "description": "Test that user subscription tiers are detected correctly and premium features are enabled or disabled accordingly.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Log in as free tier user"
      },
      {
        "type": "assertion",
        "description": "Verify advanced voice & chat features are disabled"
      },
      {
        "type": "action",
        "description": "Log in as professional/pro tier user"
      },
      {
        "type": "assertion",
        "description": "Verify access to premium voice and chat features is enabled"
      }
    ]
  },
  {
    "id": "TC020",
    "title": "End-to-End User Flow from Signup to Call Logging",
    "description": "Test the complete user journey including signup, verification, AI agent setup, call initiation, and call event logging without any console errors or failures.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Complete signup and email verification"
      },
      {
        "type": "action",
        "description": "Configure AI agent with valid data and upload knowledge base"
      },
      {
        "type": "action",
        "description": "Initiate voice call testing"
      },
      {
        "type": "assertion",
        "description": "Call is logged and appears in dashboard"
      },
      {
        "type": "assertion",
        "description": "No errors or warnings logged in browser console"
      }
    ]
  },
  {
    "id": "TC021",
    "title": "System Handles 100 Simultaneous Users on Free Tier",
    "description": "Load test the system to validate it safely supports 100 simultaneous free tier users without degradation or failures.",
    "category": "performance",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Simulate 100 users performing signup, AI configuration, and voice call tests concurrently"
      },
      {
        "type": "assertion",
        "description": "System maintains responsiveness and stability with zero crashes"
      },
      {
        "type": "assertion",
        "description": "All operations complete successfully within acceptable timeframes"
      }
    ]
  },
  {
    "id": "TC022",
    "title": "Uptime Monitoring Shows 99%+ Uptime for 48 Hours Post Launch",
    "description": "Verify with uptime monitor service (e.g. UptimeRobot) that system uptime is 99% or higher over continuous 48 hours after deployment.",
    "category": "monitoring",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Monitor health check endpoint continuously for 48 hours post launch using uptime monitoring service"
      },
      {
        "type": "assertion",
        "description": "Uptime metric reports 99% or above with no critical downtime"
      }
    ]
  },
  {
    "id": "TC023",
    "title": "Mobile Responsive Design Verification",
    "description": "Test that the application layout and navigation components adapt correctly for mobile devices and smaller screen sizes.",
    "category": "ui",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Access all main pages (signup, dashboard, calls, leads, payments, settings) using a mobile device or simulator"
      },
      {
        "type": "assertion",
        "description": "UI elements render properly without overflow or layout breaks"
      },
      {
        "type": "assertion",
        "description": "Navigation is accessible and usable with touch inputs"
      }
    ]
  },
  {
    "id": "TC024",
    "title": "Input Validation on Forms with Friendly Error Messages",
    "description": "Verify that all user input forms (signup, login, agent setup, payment, profile) validate inputs correctly and display clear, friendly error messages for invalid data.",
    "category": "error handling",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Submit empty required fields on forms"
      },
      {
        "type": "assertion",
        "description": "Validation errors displayed for missing inputs"
      },
      {
        "type": "action",
        "description": "Enter invalid formats (e.g., invalid email, invalid payment data)"
      },
      {
        "type": "assertion",
        "description": "Input validation prevents submission and shows descriptive error messages"
      }
    ]
  }
]
